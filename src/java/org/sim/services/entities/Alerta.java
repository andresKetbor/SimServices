package org.sim.services.entities;
// Generated 06/08/2015 15:00:36 by Hibernate Tools 3.6.0


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Alerta generated by hbm2java
 */
@Entity
@Table(name="Alerta"
    ,catalog="SIM2"
)
public class Alerta  implements java.io.Serializable {


     private Integer idAlerta;
     private LibroReport libroReport;
     private String criticidad;
     private Date fecha;
     private Mensaje mensaje;

    public Alerta() {
    }

	
    public Alerta(LibroReport libroReport, String criticidad, Date fecha) {
        this.libroReport = libroReport;
        this.criticidad = criticidad;
        this.fecha = fecha;
    }
    public Alerta(LibroReport libroReport, String criticidad, Date fecha, Mensaje mensaje) {
       this.libroReport = libroReport;
       this.criticidad = criticidad;
       this.fecha = fecha;
       this.mensaje = mensaje;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idAlerta", unique=true, nullable=false)
    public Integer getIdAlerta() {
        return this.idAlerta;
    }
    
    public void setIdAlerta(Integer idAlerta) {
        this.idAlerta = idAlerta;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idLibroReport", nullable=false)
    public LibroReport getLibroReport() {
        return this.libroReport;
    }
    
    public void setLibroReport(LibroReport libroReport) {
        this.libroReport = libroReport;
    }

    
    @Column(name="Criticidad", nullable=false, length=25)
    public String getCriticidad() {
        return this.criticidad;
    }
    
    public void setCriticidad(String criticidad) {
        this.criticidad = criticidad;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Fecha", nullable=false, length=10)
    public Date getFecha() {
        return this.fecha;
    }
    
    public void setFecha(Date fecha) {
        this.fecha = fecha;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="alerta")
    public Mensaje getMensaje() {
        return this.mensaje;
    }
    
    public void setMensaje(Mensaje mensaje) {
        this.mensaje = mensaje;
    }




}


