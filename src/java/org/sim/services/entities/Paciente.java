package org.sim.services.entities;
// Generated 06/08/2015 15:00:36 by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name="Paciente"
    ,catalog="SIM2"
    , uniqueConstraints = @UniqueConstraint(columnNames="DNI") 
)
public class Paciente  implements java.io.Serializable {


     private Integer idPaciente;
     private int dni;
     private String nombre;
     private String apellido;
     private int edad;
     private float altura;
     private float peso;
     private LibroReport libroReportByIdPaciente;
     private Set<LibroReport> libroReportsForIdPaciente = new HashSet<LibroReport>(0);

    public Paciente() {
    }

	
    public Paciente(int dni, String nombre, String apellido, int edad, float altura, float peso) {
        this.dni = dni;
        this.nombre = nombre;
        this.apellido = apellido;
        this.edad = edad;
        this.altura = altura;
        this.peso = peso;
    }
    public Paciente(int dni, String nombre, String apellido, int edad, float altura, float peso, LibroReport libroReportByIdPaciente, Set<LibroReport> libroReportsForIdPaciente) {
       this.dni = dni;
       this.nombre = nombre;
       this.apellido = apellido;
       this.edad = edad;
       this.altura = altura;
       this.peso = peso;
       this.libroReportByIdPaciente = libroReportByIdPaciente;
       this.libroReportsForIdPaciente = libroReportsForIdPaciente;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idPaciente", unique=true, nullable=false)
    public Integer getIdPaciente() {
        return this.idPaciente;
    }
    
    public void setIdPaciente(Integer idPaciente) {
        this.idPaciente = idPaciente;
    }

    
    @Column(name="DNI", unique=true, nullable=false)
    public int getDni() {
        return this.dni;
    }
    
    public void setDni(int dni) {
        this.dni = dni;
    }

    
    @Column(name="Nombre", nullable=false, length=30)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    @Column(name="Apellido", nullable=false, length=30)
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    
    @Column(name="Edad", nullable=false)
    public int getEdad() {
        return this.edad;
    }
    
    public void setEdad(int edad) {
        this.edad = edad;
    }

    
    @Column(name="Altura", nullable=false, precision=12, scale=0)
    public float getAltura() {
        return this.altura;
    }
    
    public void setAltura(float altura) {
        this.altura = altura;
    }

    
    @Column(name="Peso", nullable=false, precision=12, scale=0)
    public float getPeso() {
        return this.peso;
    }
    
    public void setPeso(float peso) {
        this.peso = peso;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="pacienteByIdPaciente")
    public LibroReport getLibroReportByIdPaciente() {
        return this.libroReportByIdPaciente;
    }
    
    public void setLibroReportByIdPaciente(LibroReport libroReportByIdPaciente) {
        this.libroReportByIdPaciente = libroReportByIdPaciente;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pacienteByIdPaciente_1")
    public Set<LibroReport> getLibroReportsForIdPaciente() {
        return this.libroReportsForIdPaciente;
    }
    
    public void setLibroReportsForIdPaciente(Set<LibroReport> libroReportsForIdPaciente) {
        this.libroReportsForIdPaciente = libroReportsForIdPaciente;
    }




}


