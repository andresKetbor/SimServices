package org.sim.services.entities;
// Generated 03/08/2015 20:25:36 by Hibernate Tools 3.2.1.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Libroreport generated by hbm2java
 */
@Entity
@Table(name="libroreport"
    ,catalog="sim"
)
public class LibroReport  implements java.io.Serializable {


     private Integer idLibroReport;
     private Paciente pacienteByIdLibroReport;
     private Paciente pacienteByIdPaciente;
     private Date fechaAlta;
     private Date fechaBaja;
     private String estado;
     private Set<Medicion> medicions = new HashSet<Medicion>(0);
     private Set<Alerta> alertas = new HashSet<Alerta>(0);
     private Set<AdministracionMedicamento> administracionmedicamentos = new HashSet<AdministracionMedicamento>(0);
     private Set<Nota> notas = new HashSet<Nota>(0);
     private Set<Ecg> ecgs = new HashSet<Ecg>(0);

    public LibroReport() {
    }

	
    public LibroReport(Paciente pacienteByIdLibroReport, Paciente pacienteByIdPaciente, Date fechaAlta, String estado) {
        this.pacienteByIdLibroReport = pacienteByIdLibroReport;
        this.pacienteByIdPaciente = pacienteByIdPaciente;
        this.fechaAlta = fechaAlta;
        this.estado = estado;
    }
    public LibroReport(Paciente pacienteByIdLibroReport, Paciente pacienteByIdPaciente, Date fechaAlta, Date fechaBaja, String estado, Set<Medicion> medicions, Set<Alerta> alertas, Set<AdministracionMedicamento> administracionmedicamentos, Set<Nota> notas, Set<Ecg> ecgs) {
       this.pacienteByIdLibroReport = pacienteByIdLibroReport;
       this.pacienteByIdPaciente = pacienteByIdPaciente;
       this.fechaAlta = fechaAlta;
       this.fechaBaja = fechaBaja;
       this.estado = estado;
       this.medicions = medicions;
       this.alertas = alertas;
       this.administracionmedicamentos = administracionmedicamentos;
       this.notas = notas;
       this.ecgs = ecgs;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)
    
    @Column(name="idLibroReport", unique=true, nullable=false)
    public Integer getIdLibroReport() {
        return this.idLibroReport;
    }
    
    public void setIdLibroReport(Integer idLibroReport) {
        this.idLibroReport = idLibroReport;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idLibroReport", unique=true, nullable=false, insertable=false, updatable=false)
    public Paciente getPacienteByIdLibroReport() {
        return this.pacienteByIdLibroReport;
    }
    
    public void setPacienteByIdLibroReport(Paciente pacienteByIdLibroReport) {
        this.pacienteByIdLibroReport = pacienteByIdLibroReport;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idPaciente", nullable=false)
    public Paciente getPacienteByIdPaciente() {
        return this.pacienteByIdPaciente;
    }
    
    public void setPacienteByIdPaciente(Paciente pacienteByIdPaciente) {
        this.pacienteByIdPaciente = pacienteByIdPaciente;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaAlta", nullable=false, length=10)
    public Date getFechaAlta() {
        return this.fechaAlta;
    }
    
    public void setFechaAlta(Date fechaAlta) {
        this.fechaAlta = fechaAlta;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="fechaBaja", length=10)
    public Date getFechaBaja() {
        return this.fechaBaja;
    }
    
    public void setFechaBaja(Date fechaBaja) {
        this.fechaBaja = fechaBaja;
    }
    
    @Column(name="Estado", nullable=false, length=20)
    public String getEstado() {
        return this.estado;
    }
    
    public void setEstado(String estado) {
        this.estado = estado;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="libroreport")
    public Set<Medicion> getMedicions() {
        return this.medicions;
    }
    
    public void setMedicions(Set<Medicion> medicions) {
        this.medicions = medicions;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="libroreport")
    public Set<Alerta> getAlertas() {
        return this.alertas;
    }
    
    public void setAlertas(Set<Alerta> alertas) {
        this.alertas = alertas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="libroreport")
    public Set<AdministracionMedicamento> getAdministracionmedicamentos() {
        return this.administracionmedicamentos;
    }
    
    public void setAdministracionmedicamentos(Set<AdministracionMedicamento> administracionmedicamentos) {
        this.administracionmedicamentos = administracionmedicamentos;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="libroreport")
    public Set<Nota> getNotas() {
        return this.notas;
    }
    
    public void setNotas(Set<Nota> notas) {
        this.notas = notas;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="libroreport")
    public Set<Ecg> getEcgs() {
        return this.ecgs;
    }
    
    public void setEcgs(Set<Ecg> ecgs) {
        this.ecgs = ecgs;
    }




}


